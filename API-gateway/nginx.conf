events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    limit_req_zone $binary_remote_addr zone=api_rate_limit:10m rate=10r/s;
    
    upstream rag_service {
        server [::1]:8000;  # RAG Service port
    }

    upstream security_backend {
        server 127.0.0.1:9000;  # Security Backend port
    }

    upstream app_backend {
        server 127.0.0.1:9001;  # App Backend port
    }

    upstream chroma_db {
        server 127.0.0.1:8001;  # ChromaDB port
    }

server {
    listen 8080;  # API Gateway port
    server_name rag-gateway.local;

    # Main entry: Security Backend + Rate Limiter for RAG queries
    location / {
        #  Rate limit applied here
        limit_req zone=api_rate_limit burst=5 nodelay;

        proxy_pass http://security_backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_intercept_errors on;
        error_page 403 = /blocked.json;
        error_page 503 = @rate_limited;
    }

    # Custom block message for malicious payloads
    location = /blocked.json {
        default_type application/json;
        return 403 '{"detail": "Request blocked by Payload Inspection"}';
    }

    # Custom message for rate limiting
    location @rate_limited {
        default_type application/json;
        return 429 '{"detail":"Too Many Requests - Please slow down"}';
    }

    # RAG service endpoints
    location /forward {
        proxy_pass http://rag_service/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # Increase timeout for RAG processing
        proxy_read_timeout 300s;
        proxy_connect_timeout 60s;
    }

    # Direct access to RAG API endpoints
    location /api/chat {
        proxy_pass http://rag_service/api/chat;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_read_timeout 300s;
    }

    location /api/search {
        proxy_pass http://rag_service/api/search;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_read_timeout 180s;
    }

    # Health check endpoint
    location /health {
        proxy_pass http://rag_service/health;
        proxy_set_header Host $host;
    }
}
}